<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="2016" errors="0" failures="1" not-run="10" inconclusive="0" ignored="0" skipped="3" invalid="0" date="2023-10-28" time="14:09:03">
  <environment clr-version="4.0.30319.42000" user-domain="BATTLESTATION" cwd="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper" platform="Microsoft Windows 11 Pro|C:\WINDOWS|\Device\Harddisk0\Partition3" machine-name="BATTLESTATION" nunit-version="2.5.8.0" os-version="10.0.22621" user="David" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="70.7921" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\HelpComment.Tests.ps1" executed="True" result="Ignored" success="True" time="2.0895" asserts="0" description="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\HelpComment.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ]" executed="True" result="Ignored" success="True" time="0.9005" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberAPIKey ]" executed="True" result="Success" success="True" time="0.0348" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberAPIKey ]">
                    <results>
                      <test-case description="[ Add-RocketCyberAPIKey ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] contains comment based help" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberAPIKey ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] contains a synopsis" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberAPIKey ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] contains a description" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberAPIKey ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] contains at least one usage example" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberAPIKey ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberAPIKey ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="[ Add-RocketCyberAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Add-RocketCyberAPIKey ] - Parameter has a description - [ Api_Key ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] - Parameter has a description - [ Api_Key ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0085" asserts="0" description="[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberAPIKey ].[ Add-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.0846" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberBaseURI ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberBaseURI ]">
                    <results>
                      <test-case description="[ Add-RocketCyberBaseURI ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberBaseURI ].[ Add-RocketCyberBaseURI ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberBaseURI ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberBaseURI ].[ Add-RocketCyberBaseURI ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberBaseURI ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberBaseURI ].[ Add-RocketCyberBaseURI ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberBaseURI ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberBaseURI ].[ Add-RocketCyberBaseURI ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberBaseURI ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberBaseURI ].[ Add-RocketCyberBaseURI ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Add-RocketCyberBaseURI ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberBaseURI ].[ Add-RocketCyberBaseURI ] contains a link" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberBaseURI ].[ Add-RocketCyberBaseURI ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0044" asserts="0" description="[ Add-RocketCyberBaseURI ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Add-RocketCyberBaseURI ] - Parameter has a description - [ base_uri ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberBaseURI ].[ Add-RocketCyberBaseURI ] - Parameter has a description - [ base_uri ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-RocketCyberBaseURI ] - Parameter has a description - [ data_center ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberBaseURI ].[ Add-RocketCyberBaseURI ] - Parameter has a description - [ data_center ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberBaseURI ].[ Add-RocketCyberBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0174" asserts="0" description="[ Add-RocketCyberBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Add-RocketCyberBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberBaseURI ].[ Add-RocketCyberBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-RocketCyberBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberBaseURI ].[ Add-RocketCyberBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Add-RocketCyberBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Add-RocketCyberBaseURI ].[ Add-RocketCyberBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.1165" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ ConvertTo-RocketCyberQueryString ]" executed="True" result="Success" success="True" time="0.0285" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ ConvertTo-RocketCyberQueryString ]">
                    <results>
                      <test-case description="[ ConvertTo-RocketCyberQueryString ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-RocketCyberQueryString ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-RocketCyberQueryString ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-RocketCyberQueryString ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-RocketCyberQueryString ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ ConvertTo-RocketCyberQueryString ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] contains a link" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0045" asserts="0" description="[ ConvertTo-RocketCyberQueryString ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ ConvertTo-RocketCyberQueryString ] - Parameter has a description - [ uri_Filter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] - Parameter has a description - [ uri_Filter ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ ConvertTo-RocketCyberQueryString ] - Parameter has a description - [ resource_Uri ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] - Parameter has a description - [ resource_Uri ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="[ ConvertTo-RocketCyberQueryString ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ ConvertTo-RocketCyberQueryString ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ ConvertTo-RocketCyberQueryString ].[ ConvertTo-RocketCyberQueryString ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.1515" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Export-RocketCyberModuleSettings ]" executed="True" result="Success" success="True" time="0.0316" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Export-RocketCyberModuleSettings ]">
                    <results>
                      <test-case description="[ Export-RocketCyberModuleSettings ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-RocketCyberModuleSettings ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-RocketCyberModuleSettings ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] contains a description" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-RocketCyberModuleSettings ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] contains at least one usage example" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-RocketCyberModuleSettings ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Export-RocketCyberModuleSettings ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0045" asserts="0" description="[ Export-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Export-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfPath ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfPath ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Export-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfFile ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0056" asserts="0" description="[ Export-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Export-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Export-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Export-RocketCyberModuleSettings ].[ Export-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.1928" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAccounts ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAccounts ]">
                    <results>
                      <test-case description="[ Get-RocketCyberAccounts ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAccounts ].[ Get-RocketCyberAccounts ] contains comment based help" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAccounts ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAccounts ].[ Get-RocketCyberAccounts ] contains a synopsis" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAccounts ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAccounts ].[ Get-RocketCyberAccounts ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAccounts ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAccounts ].[ Get-RocketCyberAccounts ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAccounts ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAccounts ].[ Get-RocketCyberAccounts ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAccounts ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAccounts ].[ Get-RocketCyberAccounts ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAccounts ].[ Get-RocketCyberAccounts ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0046" asserts="0" description="[ Get-RocketCyberAccounts ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberAccounts ] - Parameter has a description - [ accountId ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAccounts ].[ Get-RocketCyberAccounts ] - Parameter has a description - [ accountId ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAccounts ] - Parameter has a description - [ details ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAccounts ].[ Get-RocketCyberAccounts ] - Parameter has a description - [ details ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAccounts ].[ Get-RocketCyberAccounts ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0117" asserts="0" description="[ Get-RocketCyberAccounts ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberAccounts ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAccounts ].[ Get-RocketCyberAccounts ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAccounts ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAccounts ].[ Get-RocketCyberAccounts ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAccounts ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAccounts ].[ Get-RocketCyberAccounts ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.265" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ]" executed="True" result="Success" success="True" time="0.0687" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ]">
                    <results>
                      <test-case description="[ Get-RocketCyberAgents ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAgents ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAgents ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAgents ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAgents ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAgents ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="[ Get-RocketCyberAgents ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberAgents ] - Parameter has a description - [ accountId ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Parameter has a description - [ accountId ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Parameter has a description - [ id ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Parameter has a description - [ id ]" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Parameter has a description - [ hostname ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Parameter has a description - [ hostname ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Parameter has a description - [ ip ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Parameter has a description - [ ip ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Parameter has a description - [ created ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Parameter has a description - [ created ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Parameter has a description - [ startDate ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Parameter has a description - [ startDate ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Parameter has a description - [ endDate ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Parameter has a description - [ endDate ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Parameter has a description - [ os ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Parameter has a description - [ os ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Parameter has a description - [ version ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Parameter has a description - [ version ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Parameter has a description - [ connectivity ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Parameter has a description - [ connectivity ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Parameter has a description - [ page ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Parameter has a description - [ page ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Parameter has a description - [ pageSize ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Parameter has a description - [ pageSize ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Parameter has a description - [ sort ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Parameter has a description - [ sort ]" time="0.0055" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Parameter has a description - [ allPages ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Parameter has a description - [ allPages ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0108" asserts="0" description="[ Get-RocketCyberAgents ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberAgents ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAgents ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAgents ].[ Get-RocketCyberAgents ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.2976" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAPIKey ]" executed="True" result="Success" success="True" time="0.0291" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAPIKey ]">
                    <results>
                      <test-case description="[ Get-RocketCyberAPIKey ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] contains comment based help" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAPIKey ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] contains a synopsis" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAPIKey ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] contains a description" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAPIKey ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAPIKey ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] contains a note" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberAPIKey ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="[ Get-RocketCyberAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberAPIKey ] - Parameter has a description - [ plainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] - Parameter has a description - [ plainText ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0054" asserts="0" description="[ Get-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberAPIKey ].[ Get-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.3382" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberApps ]" executed="True" result="Success" success="True" time="0.0343" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberApps ]">
                    <results>
                      <test-case description="[ Get-RocketCyberApps ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberApps ].[ Get-RocketCyberApps ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberApps ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberApps ].[ Get-RocketCyberApps ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberApps ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberApps ].[ Get-RocketCyberApps ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberApps ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberApps ].[ Get-RocketCyberApps ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberApps ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberApps ].[ Get-RocketCyberApps ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberApps ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberApps ].[ Get-RocketCyberApps ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberApps ].[ Get-RocketCyberApps ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0044" asserts="0" description="[ Get-RocketCyberApps ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberApps ] - Parameter has a description - [ accountId ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberApps ].[ Get-RocketCyberApps ] - Parameter has a description - [ accountId ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberApps ] - Parameter has a description - [ status ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberApps ].[ Get-RocketCyberApps ] - Parameter has a description - [ status ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberApps ].[ Get-RocketCyberApps ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0121" asserts="0" description="[ Get-RocketCyberApps ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberApps ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberApps ].[ Get-RocketCyberApps ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberApps ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberApps ].[ Get-RocketCyberApps ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberApps ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberApps ].[ Get-RocketCyberApps ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Ignored" success="True" time="0.3689" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberBaseURI ]" executed="True" result="Ignored" success="True" time="0.0273" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberBaseURI ]">
                    <results>
                      <test-case description="[ Get-RocketCyberBaseURI ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberBaseURI ].[ Get-RocketCyberBaseURI ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberBaseURI ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberBaseURI ].[ Get-RocketCyberBaseURI ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberBaseURI ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberBaseURI ].[ Get-RocketCyberBaseURI ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberBaseURI ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberBaseURI ].[ Get-RocketCyberBaseURI ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberBaseURI ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberBaseURI ].[ Get-RocketCyberBaseURI ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberBaseURI ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberBaseURI ].[ Get-RocketCyberBaseURI ] contains a link" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberBaseURI ] - Parameter has a description -" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberBaseURI ].[ Get-RocketCyberBaseURI ] - Parameter has a description -" time="0.0033" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberBaseURI ].[ Get-RocketCyberBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0028" asserts="0" description="[ Get-RocketCyberBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberBaseURI ].[ Get-RocketCyberBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.4021" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberDefender ]" executed="True" result="Success" success="True" time="0.0298" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberDefender ]">
                    <results>
                      <test-case description="[ Get-RocketCyberDefender ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberDefender ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] contains a synopsis" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberDefender ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberDefender ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] contains at least one usage example" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberDefender ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberDefender ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="[ Get-RocketCyberDefender ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberDefender ] - Parameter has a description - [ accountId ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] - Parameter has a description - [ accountId ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0055" asserts="0" description="[ Get-RocketCyberDefender ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberDefender ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberDefender ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberDefender ].[ Get-RocketCyberDefender ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.4656" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ]" executed="True" result="Success" success="True" time="0.0601" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ]">
                    <results>
                      <test-case description="[ Get-RocketCyberEvents ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] contains comment based help" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberEvents ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberEvents ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] contains a description" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberEvents ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberEvents ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberEvents ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0264" asserts="0" description="[ Get-RocketCyberEvents ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberEvents ] - Parameter has a description - [ appId ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Parameter has a description - [ appId ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvents ] - Parameter has a description - [ verdict ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Parameter has a description - [ verdict ]" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvents ] - Parameter has a description - [ accountId ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Parameter has a description - [ accountId ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvents ] - Parameter has a description - [ eventSummary ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Parameter has a description - [ eventSummary ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvents ] - Parameter has a description - [ details ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Parameter has a description - [ details ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvents ] - Parameter has a description - [ dates ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Parameter has a description - [ dates ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvents ] - Parameter has a description - [ page ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Parameter has a description - [ page ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvents ] - Parameter has a description - [ pageSize ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Parameter has a description - [ pageSize ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvents ] - Parameter has a description - [ sort ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Parameter has a description - [ sort ]" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvents ] - Parameter has a description - [ allPages ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Parameter has a description - [ allPages ]" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.011" asserts="0" description="[ Get-RocketCyberEvents ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberEvents ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvents ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvents ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberEvents ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberEvents ].[ Get-RocketCyberEvents ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.5291" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ]" executed="True" result="Success" success="True" time="0.06" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ]">
                    <results>
                      <test-case description="[ Get-RocketCyberFirewalls ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberFirewalls ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] contains a synopsis" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberFirewalls ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] contains a description" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberFirewalls ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberFirewalls ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberFirewalls ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0256" asserts="0" description="[ Get-RocketCyberFirewalls ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberFirewalls ] - Parameter has a description - [ accountId ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Parameter has a description - [ accountId ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewalls ] - Parameter has a description - [ deviceId ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Parameter has a description - [ deviceId ]" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewalls ] - Parameter has a description - [ ipAddress ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Parameter has a description - [ ipAddress ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewalls ] - Parameter has a description - [ macAddress ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Parameter has a description - [ macAddress ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewalls ] - Parameter has a description - [ type ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Parameter has a description - [ type ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewalls ] - Parameter has a description - [ counters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Parameter has a description - [ counters ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewalls ] - Parameter has a description - [ page ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Parameter has a description - [ page ]" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewalls ] - Parameter has a description - [ pageSize ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Parameter has a description - [ pageSize ]" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewalls ] - Parameter has a description - [ sort ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Parameter has a description - [ sort ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewalls ] - Parameter has a description - [ allPages ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Parameter has a description - [ allPages ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.011" asserts="0" description="[ Get-RocketCyberFirewalls ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberFirewalls ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewalls ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewalls ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberFirewalls ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberFirewalls ].[ Get-RocketCyberFirewalls ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.6038" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ]" executed="True" result="Success" success="True" time="0.0713" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ]">
                    <results>
                      <test-case description="[ Get-RocketCyberIncidents ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberIncidents ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberIncidents ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] contains a description" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberIncidents ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberIncidents ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] contains a note" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberIncidents ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0324" asserts="0" description="[ Get-RocketCyberIncidents ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberIncidents ] - Parameter has a description - [ id ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Parameter has a description - [ id ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncidents ] - Parameter has a description - [ title ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Parameter has a description - [ title ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncidents ] - Parameter has a description - [ accountId ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Parameter has a description - [ accountId ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncidents ] - Parameter has a description - [ description ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Parameter has a description - [ description ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncidents ] - Parameter has a description - [ remediation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Parameter has a description - [ remediation ]" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncidents ] - Parameter has a description - [ resolvedAt ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Parameter has a description - [ resolvedAt ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncidents ] - Parameter has a description - [ createdAt ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Parameter has a description - [ createdAt ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncidents ] - Parameter has a description - [ status ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Parameter has a description - [ status ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncidents ] - Parameter has a description - [ page ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Parameter has a description - [ page ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncidents ] - Parameter has a description - [ pageSize ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Parameter has a description - [ pageSize ]" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncidents ] - Parameter has a description - [ sort ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Parameter has a description - [ sort ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncidents ] - Parameter has a description - [ allPages ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Parameter has a description - [ allPages ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0173" asserts="0" description="[ Get-RocketCyberIncidents ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberIncidents ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncidents ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncidents ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncidents ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Example has example code &amp; description   - [  EXAMPLE 4  ]" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberIncidents ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberIncidents ].[ Get-RocketCyberIncidents ] - Example has example code &amp; description   - [  EXAMPLE 5  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.6419" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberModuleSettings ]" executed="True" result="Success" success="True" time="0.0342" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberModuleSettings ]">
                    <results>
                      <test-case description="[ Get-RocketCyberModuleSettings ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] contains comment based help" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberModuleSettings ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] contains a synopsis" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberModuleSettings ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] contains a description" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberModuleSettings ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] contains at least one usage example" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberModuleSettings ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] contains a note" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberModuleSettings ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] contains a link" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0073" asserts="0" description="[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfPath ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfPath ]" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfFile ]" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ openConfFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] - Parameter has a description - [ openConfFile ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0055" asserts="0" description="[ Get-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberModuleSettings ].[ Get-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.6818" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberOffice ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberOffice ]">
                    <results>
                      <test-case description="[ Get-RocketCyberOffice ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] contains comment based help" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberOffice ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] contains a synopsis" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberOffice ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberOffice ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberOffice ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] contains a note" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Get-RocketCyberOffice ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] contains a link" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="[ Get-RocketCyberOffice ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberOffice ] - Parameter has a description - [ accountId ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] - Parameter has a description - [ accountId ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0082" asserts="0" description="[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Get-RocketCyberOffice ].[ Get-RocketCyberOffice ] - Example has example code &amp; description   - [  EXAMPLE 3  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.7188" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Import-RocketCyberModuleSettings ]" executed="True" result="Success" success="True" time="0.0334" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Import-RocketCyberModuleSettings ]">
                    <results>
                      <test-case description="[ Import-RocketCyberModuleSettings ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-RocketCyberModuleSettings ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-RocketCyberModuleSettings ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] contains a description" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-RocketCyberModuleSettings ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] contains at least one usage example" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-RocketCyberModuleSettings ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] contains a note" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Import-RocketCyberModuleSettings ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0087" asserts="0" description="[ Import-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Import-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfPath ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfPath ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Import-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfFile ]" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.006" asserts="0" description="[ Import-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Import-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Import-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Import-RocketCyberModuleSettings ].[ Import-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.7593" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ]">
                    <results>
                      <test-case description="[ Invoke-RocketCyberRequest ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] contains comment based help" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-RocketCyberRequest ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] contains a synopsis" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-RocketCyberRequest ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] contains a description" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-RocketCyberRequest ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-RocketCyberRequest ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] contains a note" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Invoke-RocketCyberRequest ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] contains a link" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0114" asserts="0" description="[ Invoke-RocketCyberRequest ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Invoke-RocketCyberRequest ] - Parameter has a description - [ method ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] - Parameter has a description - [ method ]" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-RocketCyberRequest ] - Parameter has a description - [ resource_Uri ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] - Parameter has a description - [ resource_Uri ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-RocketCyberRequest ] - Parameter has a description - [ uri_Filter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] - Parameter has a description - [ uri_Filter ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-RocketCyberRequest ] - Parameter has a description - [ data ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] - Parameter has a description - [ data ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Invoke-RocketCyberRequest ] - Parameter has a description - [ allPages ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] - Parameter has a description - [ allPages ]" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0028" asserts="0" description="[ Invoke-RocketCyberRequest ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Invoke-RocketCyberRequest ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Invoke-RocketCyberRequest ].[ Invoke-RocketCyberRequest ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Ignored" success="True" time="0.7908" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberAPIKey ]" executed="True" result="Ignored" success="True" time="0.0279" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberAPIKey ]">
                    <results>
                      <test-case description="[ Remove-RocketCyberAPIKey ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] contains comment based help" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberAPIKey ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberAPIKey ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberAPIKey ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberAPIKey ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] contains a note" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberAPIKey ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] contains a link" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberAPIKey ] - Parameter has a description -" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] - Parameter has a description -" time="0.0033" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0028" asserts="0" description="[ Remove-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberAPIKey ].[ Remove-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Ignored" success="True" time="0.8267" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberBaseURI ]" executed="True" result="Ignored" success="True" time="0.0289" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberBaseURI ]">
                    <results>
                      <test-case description="[ Remove-RocketCyberBaseURI ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberBaseURI ].[ Remove-RocketCyberBaseURI ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberBaseURI ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberBaseURI ].[ Remove-RocketCyberBaseURI ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberBaseURI ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberBaseURI ].[ Remove-RocketCyberBaseURI ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberBaseURI ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberBaseURI ].[ Remove-RocketCyberBaseURI ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberBaseURI ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberBaseURI ].[ Remove-RocketCyberBaseURI ] contains a note" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberBaseURI ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberBaseURI ].[ Remove-RocketCyberBaseURI ] contains a link" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberBaseURI ] - Parameter has a description -" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberBaseURI ].[ Remove-RocketCyberBaseURI ] - Parameter has a description -" time="0.0033" asserts="0" success="False" result="Ignored" executed="False" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberBaseURI ].[ Remove-RocketCyberBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0071" asserts="0" description="[ Remove-RocketCyberBaseURI ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-RocketCyberBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberBaseURI ].[ Remove-RocketCyberBaseURI ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.863" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberModuleSettings ]" executed="True" result="Success" success="True" time="0.0328" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberModuleSettings ]">
                    <results>
                      <test-case description="[ Remove-RocketCyberModuleSettings ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberModuleSettings ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] contains a synopsis" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberModuleSettings ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberModuleSettings ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberModuleSettings ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] contains a note" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Remove-RocketCyberModuleSettings ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] contains a link" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.005" asserts="0" description="[ Remove-RocketCyberModuleSettings ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Remove-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfPath ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] - Parameter has a description - [ RocketCyberConfPath ]" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Remove-RocketCyberModuleSettings ] - Parameter has a description - [ AndVariables ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] - Parameter has a description - [ AndVariables ]" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0091" asserts="0" description="[ Remove-RocketCyberModuleSettings ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Remove-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Remove-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Remove-RocketCyberModuleSettings ].[ Remove-RocketCyberModuleSettings ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests" executed="True" result="Success" success="True" time="0.897" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Test-RocketCyberAPIKey ]" executed="True" result="Success" success="True" time="0.0305" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Test-RocketCyberAPIKey ]">
                    <results>
                      <test-case description="[ Test-RocketCyberAPIKey ] contains comment based help" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] contains comment based help" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-RocketCyberAPIKey ] contains a synopsis" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] contains a synopsis" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-RocketCyberAPIKey ] contains a description" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] contains a description" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-RocketCyberAPIKey ] contains at least one usage example" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] contains at least one usage example" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-RocketCyberAPIKey ] contains a note" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] contains a note" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="[ Test-RocketCyberAPIKey ] contains a link" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] contains a link" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="[ Test-RocketCyberAPIKey ] - Parameter has a description - [ &lt;_.name&gt; ]">
                        <results>
                          <test-case description="[ Test-RocketCyberAPIKey ] - Parameter has a description - [ base_uri ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] - Parameter has a description - [ base_uri ]" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]" executed="True" result="Success" success="True" time="0.0055" asserts="0" description="[ Test-RocketCyberAPIKey ] - Example has example code &amp; description   - [ &lt;_.title -replace '-'.''&gt; ]">
                        <results>
                          <test-case description="[ Test-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 1  ]" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="[ Test-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ HelpComment.Tests.ps1 ].[ RocketCyberAPI ] module help tests.[ Test-RocketCyberAPIKey ].[ Test-RocketCyberAPIKey ] - Example has example code &amp; description   - [  EXAMPLE 2  ]" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1" executed="True" result="Failure" success="False" time="66.4919" asserts="0" description="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ]" executed="True" result="Failure" success="False" time="64.8216" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="2.6251" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.045" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.0947" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.1349" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.1616" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0228" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0228" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.2077" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.2522" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.2965" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.3442" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.3896" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.4347" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.4812" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.5291" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.5731" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.6331" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0561" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0561" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.6738" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.6971" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.019" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.019" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.7196" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0184" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.7418" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0181" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.7644" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0183" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.7867" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0181" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.8161" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0254" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0254" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.8559" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.036" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.036" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.8767" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.017" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.8973" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0169" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.9183" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0172" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.9391" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0169" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.9597" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0169" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="0.9813" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0177" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.0038" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0184" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.0258" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.018" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.0478" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0179" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.0701" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0183" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.1184" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.1647" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0426" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.2091" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.2549" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.3027" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.3466" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.3921" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.436" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.4799" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.5156" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0318" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.5549" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0355" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.5757" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.017" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.6261" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.6719" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.717" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.7649" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0441" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.8093" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.853" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.9018" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0449" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.942" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="1.9685" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0226" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0226" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="2.0127" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="2.0591" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="2.1055" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="2.1533" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="2.1993" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="2.2433" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="2.2885" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="2.3366" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="2.3768" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="2.4064" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0257" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0257" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="2.4535" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="2.4975" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="2.5461" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="2.5874" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]" executed="True" result="Success" success="True" time="2.6217" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0304" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ APICalls.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\APICalls.ps1)" time="0.0304" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="5.2687" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.066" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0198" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0198" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.1074" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.1502" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.1924" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.2379" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.2797" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.3213" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.363" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.4048" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.4347" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0262" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0262" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.4782" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.5214" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.5779" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0524" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0524" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.6183" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.638" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.6577" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.6768" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.6962" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.7156" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.7354" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.7548" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.781" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0221" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8226" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.8647" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.9062" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.9494" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="0.9955" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.0355" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0359" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.0633" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0239" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0239" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1047" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1473" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.1888" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.2225" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0298" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0298" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.2647" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.3064" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.3511" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.3922" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.4336" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.4754" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.5178" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.5441" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0225" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0225" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.587" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.6305" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.6726" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.7187" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.76" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.803" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.8445" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.8865" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.9331" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="1.9742" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.0175" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.0594" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.1035" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.1494" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.1908" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.2325" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.276" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.3187" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.3458" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0232" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.3874" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.424" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0328" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.4653" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.5065" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.5501" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.5934" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]" executed="True" result="Success" success="True" time="2.6401" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ ConvertTo-RocketCyberQueryString.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\ConvertTo-RocketCyberQueryString.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="8.3381" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.046" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.0904" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.1387" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.1842" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.2299" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.2744" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.3204" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.3687" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.4092" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.4577" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0446" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.5027" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.5458" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.5907" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.6517" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0568" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0568" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.6954" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.7224" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.023" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.7669" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.8157" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0407" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.8609" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.9067" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="0.9516" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.0005" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.0427" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.0919" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.1378" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.1824" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.2274" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.2747" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.3198" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.3637" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.4072" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.4514" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.4988" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.543" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.5879" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.632" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.6809" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.045" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.045" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.7243" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.768" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.81" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.8576" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.8982" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.9482" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="1.9933" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.0387" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.0841" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.1283" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.1568" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0246" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0246" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.2004" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.2447" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.2955" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0465" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0465" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.34" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.3853" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.4297" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.4742" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.5225" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.5646" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.6132" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0447" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.6588" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.7038" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.7482" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.7959" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.8394" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.8853" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0421" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.929" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="2.9765" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="3.0204" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]" executed="True" result="Success" success="True" time="3.0658" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Invoke-RocketCyberRequest.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiCalls\Invoke-RocketCyberRequest.ps1)" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="10.9339" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0416" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0672" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0179" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1078" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1483" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1888" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2308" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2712" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3116" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3565" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3971" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4391" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4798" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5203" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5765" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0523" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0523" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6142" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0337" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6333" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6531" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6719" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6909" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7099" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7296" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7488" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7679" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7867" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8063" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8253" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.869" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9149" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.957" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9981" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0396" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0806" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.122" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1663" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2071" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2478" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2887" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3309" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3713" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4157" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4561" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4981" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5396" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5821" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6247" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6696" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7114" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.753" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7932" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.834" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8784" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9192" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9601" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0011" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0435" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0845" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1287" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1714" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2123" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2586" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3403" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3845" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4265" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4671" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.5076" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.5509" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.5921" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Add-RocketCyberAPIKey.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="13.5724" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0465" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0892" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1301" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1709" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2125" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2534" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2941" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3393" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3801" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4225" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.466" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5088" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5516" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6113" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0557" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0557" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6502" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0347" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6701" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6894" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7089" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7286" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7483" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7719" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8099" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0342" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8283" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8463" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0142" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8647" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0146" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8827" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0142" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9012" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9497" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9914" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0343" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0749" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1173" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1577" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2015" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2421" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2844" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3248" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3656" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4096" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4502" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.492" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5338" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5764" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6174" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6625" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7032" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7452" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.786" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8267" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.869" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9147" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9571" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0003" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.043" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0848" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1257" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1721" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2152" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.256" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2968" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3394" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3818" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4279" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.4684" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.5101" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.5516" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.5924" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.6349" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Get-RocketCyberAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="15.749" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.082" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1234" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.166" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2087" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2497" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2961" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3381" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3788" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4194" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4599" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5017" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.5463" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6055" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0551" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0551" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6447" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0349" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6644" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6843" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7044" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.724" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7432" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.763" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7823" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.802" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8211" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8412" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8607" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.88" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8994" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9188" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9382" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9573" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9766" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9956" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0151" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0346" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0794" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1238" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1646" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2053" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2496" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2912" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3329" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3779" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4191" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4615" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5036" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.546" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5882" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6286" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6772" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7052" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0241" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0241" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.724" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7431" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7628" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.782" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8013" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8202" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8406" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.86" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8795" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8986" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9177" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9681" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0081" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0481" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0889" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1294" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1696" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Remove-RocketCyberAPIKey.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="18.1479" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.0813" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1221" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1646" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.1973" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0289" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0289" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2378" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.2782" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3188" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.3595" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4012" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4479" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.4893" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.533" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.594" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.057" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.057" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6335" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0355" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6531" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.6732" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.693" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7392" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0345" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7587" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.7783" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.798" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8182" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8386" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8589" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.8795" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9001" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9206" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9408" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9603" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9797" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="0.9992" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0188" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0383" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0578" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.0822" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.1233" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.166" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2076" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2487" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.2898" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3365" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.3783" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4202" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.4635" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5071" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5489" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.5933" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6357" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.6781" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7195" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.7601" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8016" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8285" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0232" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.8721" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9095" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0336" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9507" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0336" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="1.9979" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0381" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.0791" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1208" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.152" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0275" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0275" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.1939" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2312" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0334" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0334" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.2712" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0361" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3115" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3519" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]" executed="True" result="Success" success="True" time="2.3923" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Test-RocketCyberAPIKey.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\apiKeys\Test-RocketCyberAPIKey.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="20.6022" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0419" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0821" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1224" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1628" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2035" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.244" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2885" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3307" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3713" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4118" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4533" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.496" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5408" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5957" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.051" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.051" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6363" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6729" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0328" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6966" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0199" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7145" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0141" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7342" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7532" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7724" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7916" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8115" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.831" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.858" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.023" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.023" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9409" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9819" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0227" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0666" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0401" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1108" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1516" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.192" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2327" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2747" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3155" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3619" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4027" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4432" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.484" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5246" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5657" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6124" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6545" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6951" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7377" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7831" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.806" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0189" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0189" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8253" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.845" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8653" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8844" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9041" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9237" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9437" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.963" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.982" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0204" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0344" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0665" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1089" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1518" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1973" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0417" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2374" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2778" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3205" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.361" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4055" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.4475" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Add-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Add-RocketCyberBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="22.9868" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0843" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1242" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0361" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1684" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.209" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2493" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2896" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3318" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3749" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4154" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4553" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0361" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.54" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0325" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5958" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.052" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.052" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6353" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0355" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6549" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6739" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6927" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7117" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.731" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7501" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7691" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7884" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8077" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.827" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8461" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8651" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8845" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9039" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9231" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9421" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.961" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9803" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9996" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.019" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0433" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0203" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0203" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0836" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1239" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1658" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2066" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2469" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2909" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3313" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.376" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4211" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4633" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5034" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5437" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5878" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6281" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6706" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7116" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7539" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7959" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8411" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8817" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9233" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.964" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0061" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0478" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0891" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1329" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1729" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2182" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2584" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2986" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3409" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3811" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Get-RocketCyberBaseURI.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="25.3587" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.045" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.0819" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0327" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0327" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1158" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0301" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0301" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.1561" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2003" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2409" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.2832" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3244" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.3666" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4071" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4474" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.4913" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5315" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.5911" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0558" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0558" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6287" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0336" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6478" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.667" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.6865" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7062" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7263" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7459" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7657" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.7915" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8297" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0342" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8482" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0145" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8664" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0143" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.8845" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0144" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9028" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0145" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.921" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0145" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9391" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0144" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.957" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0142" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9749" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0141" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="0.9938" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0133" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0326" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0519" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.0752" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0194" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1157" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1586" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.1992" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2392" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.2838" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3258" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.3683" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4105" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4513" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.4931" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5332" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.5779" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6185" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.6608" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7017" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.742" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.7856" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8307" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.8714" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9134" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.954" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="1.9945" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0348" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.0794" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1195" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.1597" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.2401" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.283" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3278" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]" executed="True" result="Success" success="True" time="2.3684" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberBaseURI.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\baseUri\Remove-RocketCyberBaseURI.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="28.1423" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0439" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.08" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0279" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0279" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1206" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1585" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0342" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2068" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2469" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2875" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3283" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3688" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4139" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4541" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4949" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5375" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5955" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0541" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0541" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6359" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6635" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0237" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0237" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7049" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7476" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7883" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8287" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8731" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9139" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9546" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9956" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.029" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0295" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0295" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0701" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1108" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1516" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1924" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.237" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2769" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0361" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3171" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3578" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3986" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4397" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4858" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5278" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5696" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6102" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6513" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6969" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7375" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7807" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8217" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.863" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9036" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9497" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9865" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0329" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0194" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.029" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0606" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1017" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1456" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1866" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2275" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2684" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3095" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3371" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0238" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3784" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4193" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4601" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5031" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5316" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0247" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0247" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5722" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6147" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6553" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6994" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7398" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7801" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Export-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Export-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="30.8738" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0423" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.083" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1114" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0247" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0247" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1539" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1947" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2353" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2776" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3241" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0425" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3649" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4061" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4466" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4873" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5294" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5864" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.053" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.053" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6245" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.034" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.034" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6442" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6634" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6823" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7016" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7211" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7633" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8095" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.851" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8916" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9324" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9686" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0324" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0324" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0121" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.053" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0956" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1416" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.042" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1835" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2238" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.264" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3046" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3451" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3857" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4301" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4705" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5109" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5536" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5938" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6345" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6756" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7162" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7623" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0424" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8044" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8468" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.887" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9278" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9687" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0132" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0536" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0943" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1349" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.176" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2218" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2626" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3062" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3474" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3906" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.433" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.48" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5207" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5616" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6024" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.643" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6836" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.728" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Get-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="33.6115" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0782" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0335" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1195" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1624" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2035" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2358" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0285" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0285" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.277" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3167" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0357" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0357" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3588" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4023" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4432" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4846" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5257" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5841" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0544" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0544" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6227" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0345" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6422" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6621" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.686" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.728" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7699" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.811" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8515" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8945" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.922" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0237" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0237" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.963" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9996" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0329" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0404" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.082" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1227" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1634" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2036" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2478" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2902" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3312" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3738" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4056" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0281" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0281" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4477" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4883" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5287" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5713" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6156" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6561" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6987" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7397" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7807" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8227" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8673" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.904" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0327" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0327" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9488" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9909" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0335" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0755" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1161" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1569" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1851" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0243" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0243" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2286" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2706" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3114" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3559" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.399" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4396" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4801" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5206" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5629" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.609" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6492" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.692" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7342" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Import-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Import-RocketCyberModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="36.4358" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0845" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1264" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1661" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0359" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2064" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2474" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2876" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3295" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3752" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4154" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4556" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4958" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5369" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5772" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6221" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6621" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7023" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7425" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7828" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8229" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8661" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9084" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9486" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9896" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0299" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0697" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0361" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1137" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.162" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0444" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.204" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2446" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2846" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3256" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3703" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4108" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4511" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4912" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5312" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5715" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6152" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6556" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6975" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7377" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7802" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8224" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8635" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9092" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9491" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9895" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0313" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0716" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.114" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1595" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1966" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0331" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2416" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0411" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2816" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3222" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3647" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4053" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4476" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.492" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5326" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5729" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6131" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.6531" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.695" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7386" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0361" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.7786" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.8207" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Initialize-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Initialize-RocketCyberModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="38.951" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0433" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.0758" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0287" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0287" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1161" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1586" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.1992" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2407" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.2817" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3195" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0339" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.3636" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4042" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4449" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.4831" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0343" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5251" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.5819" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.053" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.053" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6215" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0355" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6412" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6609" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.6806" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7005" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7251" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0207" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0207" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.7673" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8105" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8513" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.8917" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9329" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="0.9752" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0196" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.0612" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1033" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.144" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.1847" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2258" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.2727" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3137" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.3562" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.397" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4393" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.4801" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5231" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.5716" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6124" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6544" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.6956" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7365" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.7824" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8242" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.8703" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0355" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9065" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0324" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0324" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9252" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9449" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9643" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="1.9833" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0028" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0221" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.042" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0618" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.0807" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1104" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0257" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0257" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1518" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.1943" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.237" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.2777" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3182" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.3585" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4033" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.44" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0326" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.4713" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0274" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0274" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]" executed="True" result="Success" success="True" time="2.5117" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Remove-RocketCyberModuleSettings.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Private\moduleSettings\Remove-RocketCyberModuleSettings.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="41.4394" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.0443" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.0848" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.125" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.1658" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.2065" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.2491" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.2934" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.3351" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.3774" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.4179" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.4582" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.4988" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.5392" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.5955" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0525" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0525" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.635" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0355" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.6542" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.6737" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.6932" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.717" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0199" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.7547" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0339" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.7728" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0143" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.791" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0145" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.8091" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0144" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.8268" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.014" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.8456" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.8643" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.8836" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.9031" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.9222" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.9415" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="0.9604" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.0007" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.0445" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.0852" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.1269" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.1676" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.21" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.2513" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.2954" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.3359" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.3762" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.4168" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.4573" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.4988" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.5394" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.5857" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.6258" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.6662" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.7027" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0328" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.7435" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.7841" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.8243" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.8645" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.9058" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.9503" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="1.9912" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="2.0304" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0316" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="2.0742" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="2.1149" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="2.1555" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="2.1965" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="2.2369" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="2.281" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="2.3213" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="2.3637" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="2.4039" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="2.4443" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]" executed="True" result="Success" success="True" time="2.4849" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAccounts.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAccounts.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="43.6041" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.0723" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0275" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0275" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.1133" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.1453" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0281" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0281" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.1829" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0338" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0338" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.2197" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.033" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.2644" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.3068" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.3498" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.3927" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.4337" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.4601" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0224" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0224" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.4981" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0342" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.5449" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.5836" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0347" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.6037" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.6233" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.6425" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.6622" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.6822" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.7023" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.016" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.7219" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.7415" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.7614" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.7809" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.8002" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.8199" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.8402" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.86" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.9039" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0347" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.9222" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0145" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.9405" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0146" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.9587" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0145" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="0.9968" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0343" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.0378" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.0849" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.1237" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0347" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.1482" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0205" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0205" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.1887" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.2297" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.2707" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.3038" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0294" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0294" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.3442" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.3855" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.4292" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.4721" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.515" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0344" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.5451" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0261" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0261" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.5805" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0316" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.5999" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.6198" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.6392" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.6589" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.6784" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.6984" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0159" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.7187" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.7381" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.763" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.021" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.806" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.8474" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.8751" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0239" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0239" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.9159" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.955" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0354" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="1.998" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="2.043" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="2.0799" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0329" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="2.1159" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.032" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]" executed="True" result="Success" success="True" time="2.1612" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberAgents.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberAgents.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="45.9642" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.0801" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0294" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0294" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.1202" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.1607" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.2013" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.2416" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.2822" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.3223" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.3685" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.4094" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.4516" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.4935" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.5357" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.5942" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0547" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0547" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.6316" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0333" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.6511" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.6706" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.6895" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.7085" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.7273" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.7537" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0156" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.7899" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0323" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.808" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0143" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.8258" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0142" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.8441" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0145" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.8619" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.014" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.8798" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0141" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.8982" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.9169" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.936" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.9561" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0161" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.9751" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="0.9942" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.0132" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.0323" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.0514" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.0748" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.1149" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.1549" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.1954" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.2352" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.036" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.036" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.2753" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.3159" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.3563" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.4007" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.4416" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.4817" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.5214" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0359" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.5633" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.6039" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.6449" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.6872" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.7336" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.7762" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.812" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.032" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.8511" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0353" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0353" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.9013" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0429" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.9437" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="1.9844" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="2.0257" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="2.0662" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="2.1081" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="2.1518" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="2.1936" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="2.2336" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="2.2739" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="2.3165" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]" executed="True" result="Success" success="True" time="2.3565" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberApps.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberApps.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="48.4885" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.0808" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.121" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.1633" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.2037" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.2462" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.2904" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.3312" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.3719" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.4136" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.454" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.4946" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.5352" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.5922" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0492" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0492" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.6303" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.034" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.034" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.6725" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.6907" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0145" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.7087" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0142" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.7283" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.7474" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.7665" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.7858" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.805" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.8242" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.8434" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.8623" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0148" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.8815" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.9009" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.9201" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.9391" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="0.9664" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0232" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.0071" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.0473" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.0902" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.1311" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.1718" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.2165" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.259" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.3013" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.3423" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.3833" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.4244" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.4696" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.5105" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.5532" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.5941" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.6357" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.6764" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.7211" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.7639" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.8049" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.8471" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.8881" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.931" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="1.9759" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.0169" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.0575" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.0988" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.1397" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.1806" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.2221" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.2627" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.3085" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.3502" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.391" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.4315" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.4728" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]" executed="True" result="Success" success="True" time="2.5137" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberDefender.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberDefender.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="51.2731" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.043" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.0846" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.1268" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.1692" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.2104" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.2519" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.2972" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.3382" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.3813" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.4242" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.4568" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0245" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0245" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.4978" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.5403" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.5974" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0532" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0532" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.637" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0356" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.6567" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0157" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.6764" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.6958" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.7223" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0226" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0226" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.7651" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.8072" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.8503" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.8918" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.9369" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="0.9802" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.0223" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.0637" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.1054" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.1465" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.188" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.2293" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.2744" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.3116" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0332" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.357" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0414" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.398" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.4388" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.4817" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.5259" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.5552" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0212" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.5963" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.6385" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.6814" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.7244" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.7675" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.8127" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.8552" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.8956" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.938" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="1.9786" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.0196" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.0647" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.1064" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.1481" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.1909" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.2321" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.2732" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.3174" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.3583" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.4008" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.4416" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.4824" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.5267" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.5692" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.6098" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.652" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.6941" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.7346" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]" executed="True" result="Success" success="True" time="2.7773" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberEvents.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberEvents.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="54.056" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.0422" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.0828" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.1233" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.166" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.1955" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0256" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0256" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.2355" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.2761" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.3172" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.3586" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.3999" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.4445" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.485" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.5259" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.583" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0532" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0532" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.6203" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0334" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0334" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.6439" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0197" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0197" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.6844" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.7249" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.7657" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.8064" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.851" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.8916" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.9324" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="0.9738" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.0145" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.0552" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.1002" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0412" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.1428" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.1838" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.2251" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.2654" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.3055" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.3506" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.3879" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0333" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.4341" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.4752" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.5155" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.5564" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.5981" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.6427" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.6838" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.7267" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.7689" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.8097" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.8505" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.893" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.9374" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="1.9797" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.022" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.0631" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.1038" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.1447" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.1739" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0253" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0253" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.2142" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.2558" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.2969" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.3287" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0281" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0281" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.3713" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.4144" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.4553" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.4881" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0291" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0291" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.5303" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.5713" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.6119" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.6524" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.6984" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.7388" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]" executed="True" result="Success" success="True" time="2.7793" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberFirewalls.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberFirewalls.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="56.7292" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.0815" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.1256" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.1666" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.2072" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.2497" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.2905" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.3314" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.3762" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.4174" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.4542" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0329" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.5009" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.5416" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.5992" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0538" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0538" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.637" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0339" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.6568" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.6766" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.6959" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.7151" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.7343" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.7539" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.7732" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.8203" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.863" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.9056" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.9462" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="0.9892" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.0304" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.071" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.1179" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0393" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.1585" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.2008" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.2434" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.2845" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.3154" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0272" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0272" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.3557" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.3963" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.4371" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.4781" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.5208" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.5665" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.6092" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.6499" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.6933" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0396" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.7345" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.7655" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0271" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0271" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.8075" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.8501" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.8906" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.9337" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="1.9764" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.0206" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.0628" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.1056" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.039" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.1468" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.1875" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.228" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.2645" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0327" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0327" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.3055" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.3469" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.3915" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.4326" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.4749" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.516" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.5477" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0242" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0242" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.5877" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.6293" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]" executed="True" result="Success" success="True" time="2.6698" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberIncidents.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberIncidents.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="59.3174" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.0405" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.0847" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.1247" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0361" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.1655" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.2059" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.2483" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.2906" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.3348" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.3755" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.4161" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.4567" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.4981" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.5401" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.5969" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0528" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0528" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.6352" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0342" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.6545" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.6736" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.6926" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.7118" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.7306" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0147" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.7495" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.769" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.7882" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.8072" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.8264" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0151" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.8454" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0149" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.8649" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.9054" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.9513" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="0.992" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.0324" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.0726" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.1127" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.1537" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.1981" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.2385" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.2809" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.3216" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.3636" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.4042" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.4463" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.4913" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.5332" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.5743" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.6153" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.6562" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.697" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.7379" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.7839" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.825" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.8663" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.9088" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.9498" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="1.9928" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.0395" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.0817" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.1238" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.1657" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.2069" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.2477" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.2927" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.3331" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.3737" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.4155" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.4565" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.4971" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.5383" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]" executed="True" result="Success" success="True" time="2.5841" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ Get-RocketCyberOffice.ps1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\Public\Get-RocketCyberOffice.ps1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Failure" success="False" time="61.9967" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.0409" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.0827" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.1246" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.1676" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.2143" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.0428" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.2561" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.2991" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.3406" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.3839" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.4256" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.0379" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.4714" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.038" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.5107" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0353" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0353" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.5473" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0325" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.5917" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.6324" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.6731" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.7142" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.7547" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.7958" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.8429" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0395" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.8842" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.9249" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="0.9661" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.0093" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.0801" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0666" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0666" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.1219" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.1414" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.1607" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.1817" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.2148" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0291" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0291" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.2554" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.2991" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0399" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.347" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.044" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.044" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.3876" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.4526" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0611" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0611" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.4967" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.5379" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.5806" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0389" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.6212" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.6671" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.7091" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.7501" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.7911" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.8319" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.8737" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.9183" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="1.9594" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.0128" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.041" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.0504" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0335" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.0698" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.0893" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.1086" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0152" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.1279" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0153" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.1475" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.1669" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0154" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.1868" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.0158" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.2058" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.015" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.2253" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0155" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Failure" success="False" time="2.303" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Failure" success="False" time="0.0737" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0737" asserts="0" success="False" result="Failure" executed="True">
                            <failure>
                              <message>[0] Expected 0, but got 2.
[1] Expected 'RocketCyberAPI.psd1 - 104', but got 104.
[2] Expected strings to be the same, but they were different.
Expected length: 25
Actual length:   94
Strings differ at index 0.
Expected: 'RocketCyberAPI.psd1 - 104'
But was:  'Do not use wildcard or $null in this field. Explicitly specify a list for FunctionsToExport.  '
           ^
[3] Expected 'RocketCyberAPI.psd1 - 113', but got 113.
[4] Expected strings to be the same, but they were different.
Expected length: 25
Actual length:   92
Strings differ at index 0.
Expected: 'RocketCyberAPI.psd1 - 113'
But was:  'Do not use wildcard or $null in this field. Explicitly specify a list for AliasesToExport.  '
           ^</message>
                              <stack-trace>[0] at ($invoke_Results | Measure-Object).Count | Should -Be 0, C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:149
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:149
[1] at $result.Line | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
[2] at $result.Message | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156
[3] at $result.Line | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:155
[4] at $result.Message | Should -Be "$($result.ScriptName) - $($result.Line)", C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156
at &lt;ScriptBlock&gt;, C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\PSScriptAnalyzer.tests.ps1:156</stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.3487" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0403" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.3902" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.4232" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0292" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.4648" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0378" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.5067" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.5488" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.5913" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.6354" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]" executed="True" result="Success" success="True" time="2.6757" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psd1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psd1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests" executed="True" result="Success" success="True" time="64.8181" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests">
                <results>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAlignAssignmentStatement ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAlignAssignmentStatement ]">
                        <results>
                          <test-case description="Should pass rule [ PSAlignAssignmentStatement ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAlignAssignmentStatement ](PSAlignAssignmentStatement,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.0809" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingCmdletAliases ]" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Should pass rule [ PSAvoidUsingCmdletAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingCmdletAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingCmdletAliases ](PSAvoidUsingCmdletAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.1222" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" executed="True" result="Success" success="True" time="0.0375" asserts="0" description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidAssignmentToAutomaticVariable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidAssignmentToAutomaticVariable ](PSAvoidAssignmentToAutomaticVariable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.1625" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueSwitchParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidDefaultValueSwitchParameter ](PSAvoidDefaultValueSwitchParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.2071" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidDefaultValueForMandatoryParameter ](PSAvoidDefaultValueForMandatoryParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.249" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingEmptyCatchBlock ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingEmptyCatchBlock ](PSAvoidUsingEmptyCatchBlock,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.29" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidGlobalAliases ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidGlobalAliases ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalAliases ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidGlobalAliases ](PSAvoidGlobalAliases,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.3299" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidGlobalFunctions ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSAvoidGlobalFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidGlobalFunctions ](PSAvoidGlobalFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.3719" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidGlobalVars ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidGlobalVars ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidGlobalVars ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidGlobalVars ](PSAvoidGlobalVars,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.4127" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSAvoidInvokingEmptyMembers ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidInvokingEmptyMembers ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidInvokingEmptyMembers ](PSAvoidInvokingEmptyMembers,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.4537" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidLongLines ]" executed="True" result="Success" success="True" time="0.0373" asserts="0" description="Should pass rule [ PSAvoidLongLines ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidLongLines ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidLongLines ](PSAvoidLongLines,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.4997" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSAvoidMultipleTypeAttributes ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidMultipleTypeAttributes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidMultipleTypeAttributes ](PSAvoidMultipleTypeAttributes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.5401" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidNullOrEmptyHelpMessageAttribute ](PSAvoidNullOrEmptyHelpMessageAttribute,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.5802" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidOverwritingBuiltInCmdlets ](PSAvoidOverwritingBuiltInCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.6221" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingPositionalParameters ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSAvoidUsingPositionalParameters ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPositionalParameters ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingPositionalParameters ](PSAvoidUsingPositionalParameters,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.664" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSReservedCmdletChar ]" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Should pass rule [ PSReservedCmdletChar ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedCmdletChar ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSReservedCmdletChar ](PSReservedCmdletChar,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.7044" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSReservedParams ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSReservedParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSReservedParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSReservedParams ](PSReservedParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.7443" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidSemicolonsAsLineTerminators ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidSemicolonsAsLineTerminators ](PSAvoidSemicolonsAsLineTerminators,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.7883" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidShouldContinueWithoutForce ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidShouldContinueWithoutForce ](PSAvoidShouldContinueWithoutForce,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.8302" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidTrailingWhitespace ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSAvoidTrailingWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidTrailingWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidTrailingWhitespace ](PSAvoidTrailingWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.8706" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingUsernameAndPasswordParams ](PSAvoidUsingUsernameAndPasswordParams,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.9127" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingBrokenHashAlgorithms ](PSAvoidUsingBrokenHashAlgorithms,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.9531" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingComputerNameHardcoded ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingComputerNameHardcoded ](PSAvoidUsingComputerNameHardcoded,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="0.9931" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingConvertToSecureStringWithPlainText ](PSAvoidUsingConvertToSecureStringWithPlainText,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.0353" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDeprecatedManifestFields ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingDeprecatedManifestFields ](PSAvoidUsingDeprecatedManifestFields,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.0794" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingDoubleQuotesForConstantString ](PSAvoidUsingDoubleQuotesForConstantString,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.1161" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingInvokeExpression ]" executed="True" result="Success" success="True" time="0.0328" asserts="0" description="Should pass rule [ PSAvoidUsingInvokeExpression ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingInvokeExpression ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingInvokeExpression ](PSAvoidUsingInvokeExpression,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.1611" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingPlainTextForPassword ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingPlainTextForPassword ](PSAvoidUsingPlainTextForPassword,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.2014" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingWMICmdlet ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSAvoidUsingWMICmdlet ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWMICmdlet ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingWMICmdlet ](PSAvoidUsingWMICmdlet,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.2423" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingWriteHost ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSAvoidUsingWriteHost ]">
                        <results>
                          <test-case description="Should pass rule [ PSAvoidUsingWriteHost ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSAvoidUsingWriteHost ](PSAvoidUsingWriteHost,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.2822" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseCompatibleCommands ]" executed="True" result="Success" success="True" time="0.0361" asserts="0" description="Should pass rule [ PSUseCompatibleCommands ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCommands ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseCompatibleCommands ](PSUseCompatibleCommands,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.3221" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseCompatibleSyntax ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSUseCompatibleSyntax ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleSyntax ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseCompatibleSyntax ](PSUseCompatibleSyntax,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.363" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseCompatibleTypes ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseCompatibleTypes ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleTypes ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseCompatibleTypes ](PSUseCompatibleTypes,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.405" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSMisleadingBacktick ]" executed="True" result="Success" success="True" time="0.0382" asserts="0" description="Should pass rule [ PSMisleadingBacktick ]">
                        <results>
                          <test-case description="Should pass rule [ PSMisleadingBacktick ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSMisleadingBacktick ](PSMisleadingBacktick,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.4486" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSMissingModuleManifestField ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSMissingModuleManifestField ]">
                        <results>
                          <test-case description="Should pass rule [ PSMissingModuleManifestField ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSMissingModuleManifestField ](PSMissingModuleManifestField,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.489" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSPlaceCloseBrace ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSPlaceCloseBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceCloseBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSPlaceCloseBrace ](PSPlaceCloseBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.5288" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSPlaceOpenBrace ]" executed="True" result="Success" success="True" time="0.0361" asserts="0" description="Should pass rule [ PSPlaceOpenBrace ]">
                        <results>
                          <test-case description="Should pass rule [ PSPlaceOpenBrace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSPlaceOpenBrace ](PSPlaceOpenBrace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.5693" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" executed="True" result="Success" success="True" time="0.0367" asserts="0" description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectComparisonWithNull ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSPossibleIncorrectComparisonWithNull ](PSPossibleIncorrectComparisonWithNull,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.6093" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfAssignmentOperator ](PSPossibleIncorrectUsageOfAssignmentOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.6495" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]">
                        <results>
                          <test-case description="Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSPossibleIncorrectUsageOfRedirectionOperator ](PSPossibleIncorrectUsageOfRedirectionOperator,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.6933" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSProvideCommentHelp ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSProvideCommentHelp ]">
                        <results>
                          <test-case description="Should pass rule [ PSProvideCommentHelp ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSProvideCommentHelp ](PSProvideCommentHelp,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.7355" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSReviewUnusedParameter ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSReviewUnusedParameter ]">
                        <results>
                          <test-case description="Should pass rule [ PSReviewUnusedParameter ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSReviewUnusedParameter ](PSReviewUnusedParameter,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.7779" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseApprovedVerbs ]" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Should pass rule [ PSUseApprovedVerbs ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseApprovedVerbs ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseApprovedVerbs ](PSUseApprovedVerbs,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.8187" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseBOMForUnicodeEncodedFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseBOMForUnicodeEncodedFile ](PSUseBOMForUnicodeEncodedFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.8611" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseCmdletCorrectly ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseCmdletCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCmdletCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseCmdletCorrectly ](PSUseCmdletCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.9017" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseCompatibleCmdlets ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseCompatibleCmdlets ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCompatibleCmdlets ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseCompatibleCmdlets ](PSUseCompatibleCmdlets,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.9421" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseConsistentIndentation ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSUseConsistentIndentation ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentIndentation ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseConsistentIndentation ](PSUseConsistentIndentation,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="1.9868" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseConsistentWhitespace ]" executed="True" result="Success" success="True" time="0.0408" asserts="0" description="Should pass rule [ PSUseConsistentWhitespace ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseConsistentWhitespace ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseConsistentWhitespace ](PSUseConsistentWhitespace,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.0281" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseCorrectCasing ]" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Should pass rule [ PSUseCorrectCasing ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseCorrectCasing ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseCorrectCasing ](PSUseCorrectCasing,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.0706" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseDeclaredVarsMoreThanAssignments ](PSUseDeclaredVarsMoreThanAssignments,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.1118" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ]" executed="True" result="Success" success="True" time="0.0374" asserts="0" description="Should pass rule [ PSUseLiteralInitializerForHashtable ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseLiteralInitializerForHashtable ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseLiteralInitializerForHashtable ](PSUseLiteralInitializerForHashtable,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.1522" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseOutputTypeCorrectly ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSUseOutputTypeCorrectly ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseOutputTypeCorrectly ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseOutputTypeCorrectly ](PSUseOutputTypeCorrectly,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.1933" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ]" executed="True" result="Success" success="True" time="0.0372" asserts="0" description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseProcessBlockForPipelineCommand ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseProcessBlockForPipelineCommand ](PSUseProcessBlockForPipelineCommand,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.2396" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUsePSCredentialType ]" executed="True" result="Success" success="True" time="0.0387" asserts="0" description="Should pass rule [ PSUsePSCredentialType ]">
                        <results>
                          <test-case description="Should pass rule [ PSUsePSCredentialType ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUsePSCredentialType ](PSUsePSCredentialType,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.282" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSShouldProcess ]" executed="True" result="Success" success="True" time="0.0386" asserts="0" description="Should pass rule [ PSShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSShouldProcess ](PSShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.3228" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" executed="True" result="Success" success="True" time="0.037" asserts="0" description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseShouldProcessForStateChangingFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseShouldProcessForStateChangingFunctions ](PSUseShouldProcessForStateChangingFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.3633" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseSingularNouns ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSUseSingularNouns ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSingularNouns ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseSingularNouns ](PSUseSingularNouns,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.4041" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseSupportsShouldProcess ]" executed="True" result="Success" success="True" time="0.0371" asserts="0" description="Should pass rule [ PSUseSupportsShouldProcess ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseSupportsShouldProcess ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseSupportsShouldProcess ](PSUseSupportsShouldProcess,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.4446" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseToExportFieldsInManifest ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Should pass rule [ PSUseToExportFieldsInManifest ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseToExportFieldsInManifest ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseToExportFieldsInManifest ](PSUseToExportFieldsInManifest,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.4868" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" executed="True" result="Success" success="True" time="0.0383" asserts="0" description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseUsingScopeModifierInNewRunspaces ](PSUseUsingScopeModifierInNewRunspaces,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.531" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ]" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]">
                        <results>
                          <test-case description="Should pass rule [ PSUseUTF8EncodingForHelpFile ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSUseUTF8EncodingForHelpFile ](PSUseUTF8EncodingForHelpFile,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.571" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSDSCDscExamplesPresent ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSDSCDscExamplesPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscExamplesPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSDSCDscExamplesPresent ](PSDSCDscExamplesPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.611" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSDSCDscTestsPresent ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSDSCDscTestsPresent ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCDscTestsPresent ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSDSCDscTestsPresent ](PSDSCDscTestsPresent,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.6539" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" executed="True" result="Success" success="True" time="0.0391" asserts="0" description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSDSCReturnCorrectTypesForDSCFunctions ](PSDSCReturnCorrectTypesForDSCFunctions,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.694" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSDSCUseIdenticalMandatoryParametersForDSC ](PSDSCUseIdenticalMandatoryParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.7338" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" executed="True" result="Success" success="True" time="0.036" asserts="0" description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseIdenticalParametersForDSC ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSDSCUseIdenticalParametersForDSC ](PSDSCUseIdenticalParametersForDSC,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.036" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.7776" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCStandardDSCFunctionsInResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSDSCStandardDSCFunctionsInResource ](PSDSCStandardDSCFunctionsInResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]" executed="True" result="Success" success="True" time="2.8179" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ]">
                    <results>
                      <test-suite type="ParameterizedTest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]">
                        <results>
                          <test-case description="Should pass rule [ PSDSCUseVerboseMessageInDSCResource ]" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ PSScriptAnalyzer.tests.ps1 ].[ RocketCyberAPI ] module PSScriptAnalyzer tests.[ RocketCyberAPI.psm1 ].Should pass rule [ PSDSCUseVerboseMessageInDSCResource ](PSDSCUseVerboseMessageInDSCResource,C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\RocketCyberAPI\RocketCyberAPI.psm1)" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\RocketCyberAPI.Tests.ps1" executed="True" result="Success" success="True" time="0.2042" asserts="0" description="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\RocketCyberAPI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0925" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data" executed="True" result="Success" success="True" time="0.0625" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data">
                <results>
                  <test-case description="Manifest [ RootModule ] has valid data" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ RootModule ] has valid data" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ModuleVersion ] has valid data" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ ModuleVersion ] has valid data" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ GUID ] has valid data" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ GUID ] has valid data" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Author ] has valid data" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ Author ] has valid data" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ CompanyName ] has valid data" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ CompanyName ] has valid data" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Copyright ] has valid data" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ Copyright ] has valid data" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Description ] is not empty" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ Description ] is not empty" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ PowerShellVersion ] has valid data" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ PowerShellVersion ] has valid data" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ NestedModules ] has valid data" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ NestedModules ] has valid data" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ FunctionsToExport ] has valid data" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ FunctionsToExport ] has valid data" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ CmdletsToExport ] is empty" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ CmdletsToExport ] is empty" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ VariablesToExport ] is empty" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ VariablesToExport ] is empty" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ AliasesToExport ] has alias" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ AliasesToExport ] has alias" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ Tags ] has valid data" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ Tags ] has valid data" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ LicenseUri ] has valid data" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ LicenseUri ] has valid data" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ProjectUri ] has valid data" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ ProjectUri ] has valid data" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ IconUri ] has valid data" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ IconUri ] has valid data" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ ReleaseNotes ] has valid data" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ ReleaseNotes ] has valid data" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Manifest [ HelpInfoUri ] is not empty" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] general manifest data.Manifest [ HelpInfoUri ] is not empty" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] module import test" executed="True" result="Success" success="True" time="0.089" asserts="0" description="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] module import test">
                <results>
                  <test-case description="Module contains only PowerShell files" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] module import test.Module contains only PowerShell files" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Module files exist" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] module import test.Module files exist" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should pass Test-ModuleManifest" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] module import test.Should pass Test-ModuleManifest" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should import successfully" name="Testing the [ notbuilt ] version of [ RocketCyberAPI ] with [ RocketCyberAPI.Tests.ps1 ].[ RocketCyberAPI.psd1 ] module import test.Should import successfully" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\apiKeys\Add-RocketCyberAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.1164" asserts="0" description="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\apiKeys\Add-RocketCyberAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ Add-RocketCyberAPIKey ] functions with [ Add-RocketCyberAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0163" asserts="0" description="Testing the [ notbuilt ] version of [ Add-RocketCyberAPIKey ] functions with [ Add-RocketCyberAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing the [ notbuilt ] version of [ Add-RocketCyberAPIKey ] functions with [ Add-RocketCyberAPIKey.Tests.ps1 ].[ Add-RocketCyberAPIKey ] testing functions" executed="True" result="Success" success="True" time="0.0128" asserts="0" description="Testing the [ notbuilt ] version of [ Add-RocketCyberAPIKey ] functions with [ Add-RocketCyberAPIKey.Tests.ps1 ].[ Add-RocketCyberAPIKey ] testing functions">
                <results>
                  <test-case description="[ Add-RocketCyberAPIKey ] should have an alias" name="Testing the [ notbuilt ] version of [ Add-RocketCyberAPIKey ] functions with [ Add-RocketCyberAPIKey.Tests.ps1 ].[ Add-RocketCyberAPIKey ] testing functions.[ Add-RocketCyberAPIKey ] should have an alias" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="[ -Api_Key ] should accept a value from the pipeline" name="Testing the [ notbuilt ] version of [ Add-RocketCyberAPIKey ] functions with [ Add-RocketCyberAPIKey.Tests.ps1 ].[ Add-RocketCyberAPIKey ] testing functions.[ -Api_Key ] should accept a value from the pipeline" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="[ -Api_Key ] should accept input" name="Testing the [ notbuilt ] version of [ Add-RocketCyberAPIKey ] functions with [ Add-RocketCyberAPIKey.Tests.ps1 ].[ Add-RocketCyberAPIKey ] testing functions.[ -Api_Key ] should accept input" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\apiKeys\Get-RocketCyberAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.1216" asserts="0" description="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\apiKeys\Get-RocketCyberAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0242" asserts="0" description="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ].[ Get-RocketCyberAPIKey ] testing function" executed="True" result="Success" success="True" time="0.0206" asserts="0" description="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ].[ Get-RocketCyberAPIKey ] testing function">
                <results>
                  <test-case description="[ -Api_Key ] should accept input" name="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ].[ Get-RocketCyberAPIKey ] testing function.[ -Api_Key ] should accept input" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Pipeline  - [ -Api_Key ] should return a secure string" name="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ].[ Get-RocketCyberAPIKey ] testing function.Pipeline  - [ -Api_Key ] should return a secure string" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Parameter - [ -Api_Key ] should return a secure string" name="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ].[ Get-RocketCyberAPIKey ] testing function.Parameter - [ -Api_Key ] should return a secure string" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Using [ -plainText ] should return [ -Api_Key ] as a string" name="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ].[ Get-RocketCyberAPIKey ] testing function.Using [ -plainText ] should return [ -Api_Key ] as a string" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If [ -Api_Key ] is empty it should throw a warning" name="Testing [ Get-RocketCyberAPIKey ] function with [ Get-RocketCyberAPIKey.Tests.ps1 ].[ Get-RocketCyberAPIKey ] testing function.If [ -Api_Key ] is empty it should throw a warning" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\apiKeys\Remove-RocketCyberAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.1159" asserts="0" description="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\apiKeys\Remove-RocketCyberAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-RocketCyberAPIKey ] function with [ Remove-RocketCyberAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0179" asserts="0" description="Testing [ Remove-RocketCyberAPIKey ] function with [ Remove-RocketCyberAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-RocketCyberAPIKey ] function with [ Remove-RocketCyberAPIKey.Tests.ps1 ].[ Remove-RocketCyberAPIKey ] testing function" executed="True" result="Success" success="True" time="0.0143" asserts="0" description="Testing [ Remove-RocketCyberAPIKey ] function with [ Remove-RocketCyberAPIKey.Tests.ps1 ].[ Remove-RocketCyberAPIKey ] testing function">
                <results>
                  <test-case description="Running [ Remove-RocketCyberAPIKey ] should remove all apiKey variables" name="Testing [ Remove-RocketCyberAPIKey ] function with [ Remove-RocketCyberAPIKey.Tests.ps1 ].[ Remove-RocketCyberAPIKey ] testing function.Running [ Remove-RocketCyberAPIKey ] should remove all apiKey variables" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the [ RocketCyber_API_Key ] is already empty a warning should be thrown" name="Testing [ Remove-RocketCyberAPIKey ] function with [ Remove-RocketCyberAPIKey.Tests.ps1 ].[ Remove-RocketCyberAPIKey ] testing function.If the [ RocketCyber_API_Key ] is already empty a warning should be thrown" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\apiKeys\Test-RocketCyberAPIKey.Tests.ps1" executed="True" result="Success" success="True" time="0.3466" asserts="0" description="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\apiKeys\Test-RocketCyberAPIKey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Test-RocketCyberAPIKey ] function with [ Test-RocketCyberAPIKey.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.2505" asserts="0" description="Testing [ Test-RocketCyberAPIKey ] function with [ Test-RocketCyberAPIKey.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Test-RocketCyberAPIKey ] function with [ Test-RocketCyberAPIKey.Tests.ps1 ].[ Test-RocketCyberAPIKey ] testing function" executed="True" result="Success" success="True" time="0.247" asserts="0" description="Testing [ Test-RocketCyberAPIKey ] function with [ Test-RocketCyberAPIKey.Tests.ps1 ].[ Test-RocketCyberAPIKey ] testing function">
                <results>
                  <test-case description="[ Test-RocketCyberAPIKey ] with a bad API key should fail to authenticate" name="Testing [ Test-RocketCyberAPIKey ] function with [ Test-RocketCyberAPIKey.Tests.ps1 ].[ Test-RocketCyberAPIKey ] testing function.[ Test-RocketCyberAPIKey ] with a bad API key should fail to authenticate" time="0.2434" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\baseUri\Add-RocketCyberBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.1479" asserts="0" description="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\baseUri\Add-RocketCyberBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0368" asserts="0" description="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions" executed="True" result="Success" success="True" time="0.0333" asserts="0" description="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions">
                <results>
                  <test-case description="[ Add-RocketCyberBaseURI ] should have an alias" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.[ Add-RocketCyberBaseURI ] should have an alias" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Without parameters should return the default URI" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.Without parameters should return the default URI" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should accept a value from the pipeline" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.Should accept a value from the pipeline" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With parameter -base_uri  should return what was inputted" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.With parameter -base_uri  should return what was inputted" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With parameter -data_center US should return the default URI" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.With parameter -data_center US should return the default URI" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With parameter -data_center EU should return the default URI" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.With parameter -data_center EU should return the default URI" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="With invalid parameter value -data_center Space should return an error" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.With invalid parameter value -data_center Space should return an error" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The default URI should NOT contain a trailing forward slash" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.The default URI should NOT contain a trailing forward slash" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="A custom URI should NOT contain a trailing forward slash" name="Testing [ Add-RocketCyberBaseURI ] functions with [ Add-RocketCyberBaseURI.Tests.ps1 ].[ Add-RocketCyberBaseURI ] testing functions.A custom URI should NOT contain a trailing forward slash" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\baseUri\Get-RocketCyberBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.1212" asserts="0" description="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\baseUri\Get-RocketCyberBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0204" asserts="0" description="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ].[ Get-RocketCyberBaseURI ] testing function" executed="True" result="Success" success="True" time="0.0167" asserts="0" description="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ].[ Get-RocketCyberBaseURI ] testing function">
                <results>
                  <test-case description="The default URI should be returned" name="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ].[ Get-RocketCyberBaseURI ] testing function.The default URI should be returned" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The URI should be a string" name="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ].[ Get-RocketCyberBaseURI ] testing function.The URI should be a string" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="The default URI should NOT contain a trailing forward slash" name="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ].[ Get-RocketCyberBaseURI ] testing function.The default URI should NOT contain a trailing forward slash" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="A custom URI should NOT contain a trailing forward slash" name="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ].[ Get-RocketCyberBaseURI ] testing function.A custom URI should NOT contain a trailing forward slash" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the baseUri is not set a warning should be thrown" name="Testing [ Get-RocketCyberBaseURI ] function with [ Get-RocketCyberBaseURI.Tests.ps1 ].[ Get-RocketCyberBaseURI ] testing function.If the baseUri is not set a warning should be thrown" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\baseUri\Remove-RocketCyberBaseURI.Tests.ps1" executed="True" result="Success" success="True" time="0.1105" asserts="0" description="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\baseUri\Remove-RocketCyberBaseURI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-RocketCyberBaseURI ] function with [ Remove-RocketCyberBaseURI.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0135" asserts="0" description="Testing [ Remove-RocketCyberBaseURI ] function with [ Remove-RocketCyberBaseURI.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-RocketCyberBaseURI ] function with [ Remove-RocketCyberBaseURI.Tests.ps1 ].[ Remove-RocketCyberBaseURI ] testing function" executed="True" result="Success" success="True" time="0.0097" asserts="0" description="Testing [ Remove-RocketCyberBaseURI ] function with [ Remove-RocketCyberBaseURI.Tests.ps1 ].[ Remove-RocketCyberBaseURI ] testing function">
                <results>
                  <test-case description="The baseUri variable should not longer exist" name="Testing [ Remove-RocketCyberBaseURI ] function with [ Remove-RocketCyberBaseURI.Tests.ps1 ].[ Remove-RocketCyberBaseURI ] testing function.The baseUri variable should not longer exist" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="If the baseUri is already gone a warning should be thrown" name="Testing [ Remove-RocketCyberBaseURI ] function with [ Remove-RocketCyberBaseURI.Tests.ps1 ].[ Remove-RocketCyberBaseURI ] testing function.If the baseUri is already gone a warning should be thrown" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\moduleSettings\Export-RocketCyberModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.1546" asserts="0" description="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\moduleSettings\Export-RocketCyberModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Export-RocketCyberModuleSettings ] function with [ Export-RocketCyberModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0549" asserts="0" description="Testing [ Export-RocketCyberModuleSettings ] function with [ Export-RocketCyberModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Export-RocketCyberModuleSettings ] function with [ Export-RocketCyberModuleSettings.Tests.ps1 ].[ Export-RocketCyberModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0512" asserts="0" description="Testing [ Export-RocketCyberModuleSettings ] function with [ Export-RocketCyberModuleSettings.Tests.ps1 ].[ Export-RocketCyberModuleSettings ] testing function">
                <results>
                  <test-case description="Should export successfully" name="Testing [ Export-RocketCyberModuleSettings ] function with [ Export-RocketCyberModuleSettings.Tests.ps1 ].[ Export-RocketCyberModuleSettings ] testing function.Should export successfully" time="0.0053" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration directory should be hidden" name="Testing [ Export-RocketCyberModuleSettings ] function with [ Export-RocketCyberModuleSettings.Tests.ps1 ].[ Export-RocketCyberModuleSettings ] testing function.Configuration directory should be hidden" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration file should contain required values" name="Testing [ Export-RocketCyberModuleSettings ] function with [ Export-RocketCyberModuleSettings.Tests.ps1 ].[ Export-RocketCyberModuleSettings ] testing function.Configuration file should contain required values" time="0.0269" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\moduleSettings\Get-RocketCyberModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.137" asserts="0" description="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\moduleSettings\Get-RocketCyberModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Get-RocketCyberModuleSettings ] function with [ Get-RocketCyberModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0415" asserts="0" description="Testing [ Get-RocketCyberModuleSettings ] function with [ Get-RocketCyberModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Get-RocketCyberModuleSettings ] function with [ Get-RocketCyberModuleSettings.Tests.ps1 ].[ Get-RocketCyberModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0345" asserts="0" description="Testing [ Get-RocketCyberModuleSettings ] function with [ Get-RocketCyberModuleSettings.Tests.ps1 ].[ Get-RocketCyberModuleSettings ] testing function">
                <results>
                  <test-case description="Configuration directory should be hidden" name="Testing [ Get-RocketCyberModuleSettings ] function with [ Get-RocketCyberModuleSettings.Tests.ps1 ].[ Get-RocketCyberModuleSettings ] testing function.Configuration directory should be hidden" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Configuration file should contain required values" name="Testing [ Get-RocketCyberModuleSettings ] function with [ Get-RocketCyberModuleSettings.Tests.ps1 ].[ Get-RocketCyberModuleSettings ] testing function.Configuration file should contain required values" time="0.0252" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\moduleSettings\Import-RocketCyberModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.162" asserts="0" description="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\moduleSettings\Import-RocketCyberModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Import-RocketCyberModuleSettings ] function with [ Import-RocketCyberModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.065" asserts="0" description="Testing [ Import-RocketCyberModuleSettings ] function with [ Import-RocketCyberModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Import-RocketCyberModuleSettings ] function with [ Import-RocketCyberModuleSettings.Tests.ps1 ].[ Import-RocketCyberModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0614" asserts="0" description="Testing [ Import-RocketCyberModuleSettings ] function with [ Import-RocketCyberModuleSettings.Tests.ps1 ].[ Import-RocketCyberModuleSettings ] testing function">
                <results>
                  <test-case description="No configuration should populate baseline variables" name="Testing [ Import-RocketCyberModuleSettings ] function with [ Import-RocketCyberModuleSettings.Tests.ps1 ].[ Import-RocketCyberModuleSettings ] testing function.No configuration should populate baseline variables" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration session should contain required variables" name="Testing [ Import-RocketCyberModuleSettings ] function with [ Import-RocketCyberModuleSettings.Tests.ps1 ].[ Import-RocketCyberModuleSettings ] testing function.Saved configuration session should contain required variables" time="0.0259" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration session should NOT contain temp variables" name="Testing [ Import-RocketCyberModuleSettings ] function with [ Import-RocketCyberModuleSettings.Tests.ps1 ].[ Import-RocketCyberModuleSettings ] testing function.Saved configuration session should NOT contain temp variables" time="0.0226" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\moduleSettings\Initialize-RocketCyberModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.2864" asserts="0" description="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\moduleSettings\Initialize-RocketCyberModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Initialize-RocketCyberModuleSettings ] function with [ Initialize-RocketCyberModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.1864" asserts="0" description="Testing [ Initialize-RocketCyberModuleSettings ] function with [ Initialize-RocketCyberModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Initialize-RocketCyberModuleSettings ] function with [ Initialize-RocketCyberModuleSettings.Tests.ps1 ].[ Initialize-RocketCyberModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.1828" asserts="0" description="Testing [ Initialize-RocketCyberModuleSettings ] function with [ Initialize-RocketCyberModuleSettings.Tests.ps1 ].[ Initialize-RocketCyberModuleSettings ] testing function">
                <results>
                  <test-case description="When imported WITHOUT a saved configuration baseline variables should exist" name="Testing [ Initialize-RocketCyberModuleSettings ] function with [ Initialize-RocketCyberModuleSettings.Tests.ps1 ].[ Initialize-RocketCyberModuleSettings ] testing function.When imported WITHOUT a saved configuration baseline variables should exist" time="0.0613" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When imported WITh a saved configuration baseline variables should exist" name="Testing [ Initialize-RocketCyberModuleSettings ] function with [ Initialize-RocketCyberModuleSettings.Tests.ps1 ].[ Initialize-RocketCyberModuleSettings ] testing function.When imported WITh a saved configuration baseline variables should exist" time="0.1178" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\moduleSettings\Remove-RocketCyberModuleSettings.Tests.ps1" executed="True" result="Success" success="True" time="0.127" asserts="0" description="C:\Celerium\Projects\_API\RocketCyber-PowerShellWrapper\tests\Private\moduleSettings\Remove-RocketCyberModuleSettings.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing [ Remove-RocketCyberModuleSettings ] function with [ Remove-RocketCyberModuleSettings.Tests.ps1 ]" executed="True" result="Success" success="True" time="0.0302" asserts="0" description="Testing [ Remove-RocketCyberModuleSettings ] function with [ Remove-RocketCyberModuleSettings.Tests.ps1 ]">
            <results>
              <test-suite type="TestFixture" name="Testing [ Remove-RocketCyberModuleSettings ] function with [ Remove-RocketCyberModuleSettings.Tests.ps1 ].[ Remove-RocketCyberModuleSettings ] testing function" executed="True" result="Success" success="True" time="0.0265" asserts="0" description="Testing [ Remove-RocketCyberModuleSettings ] function with [ Remove-RocketCyberModuleSettings.Tests.ps1 ].[ Remove-RocketCyberModuleSettings ] testing function">
                <results>
                  <test-case description="No configuration should throw a warning" name="Testing [ Remove-RocketCyberModuleSettings ] function with [ Remove-RocketCyberModuleSettings.Tests.ps1 ].[ Remove-RocketCyberModuleSettings ] testing function.No configuration should throw a warning" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration should be removed" name="Testing [ Remove-RocketCyberModuleSettings ] function with [ Remove-RocketCyberModuleSettings.Tests.ps1 ].[ Remove-RocketCyberModuleSettings ] testing function.Saved configuration should be removed" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Saved configuration &amp; variables should be removed" name="Testing [ Remove-RocketCyberModuleSettings ] function with [ Remove-RocketCyberModuleSettings.Tests.ps1 ].[ Remove-RocketCyberModuleSettings ] testing function.Saved configuration &amp; variables should be removed" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>